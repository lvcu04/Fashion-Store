import React, { useCallback } from 'react';
import { Text, View, ActivityIndicator } from 'react-native';
import { useFocusEffect, useRouter } from 'expo-router';
import { useAuth } from '@/context/authContext';
import { API } from '@/constants/api';

const WaitingForPayment = () => {
  const { firebaseUser } = useAuth();
  const router = useRouter();

  useFocusEffect(
    useCallback(() => {
    let interval: ReturnType<typeof setInterval>;//khai b√°o t√™n bi·∫øn interval v·ªõi ki·ªÉu d·ªØ li·ªáu lo·∫°i tr·∫£ v·ªÅ c·ªßa h√†m serInterval
        //khai b√°o c√°ch n√†y ƒë·ªÉ l∆∞u bi·∫øn t·∫°m th·ªùi thay v√¨ d√πng usestate ƒë·ªÉ render l·∫°i. H·ªó tr·ª£ cho vi·ªác c·∫•p Id cho clearInterval d·ª´ng l·∫∑p
      const checkOrderStatus = async () => {
        try {
          if (!firebaseUser) return;
          const token = await firebaseUser.getIdToken();

          const res = await fetch(API.order.orderPaid, {
            method: 'GET',
            headers: {
              Authorization: `Bearer ${token}`,
              'Content-Type': 'application/json',
            },
          });

          const data = await res.json();
          console.log("üîÅ ƒê·ª£i x√°c nh·∫≠n thanh to√°n:", data);

          if (Array.isArray(data) && data.length > 0 && data[0].order_status === 'paid') {
            clearInterval(interval);// tr√°nh vi·ªác l·∫∑p v√† ko ti·∫øp t·ª•c ki·ªÉm tra tr·∫°ng th√°i ƒë∆°n h√†ng kh√¥ng c·∫ßn thi·∫øt n·ªØa
            router.replace('/(checkout)/success');
          }
        } catch (error) {
          console.error("‚ùå L·ªói ki·ªÉm tra ƒë∆°n h√†ng khi ƒë·ª£i thanh to√°n:", error);
        }
      };

      interval = setInterval(checkOrderStatus, 5000);

      return () => clearInterval(interval);//N·∫øu kh√¥ng clear, timer s·∫Ω ti·∫øp t·ª•c ch·∫°y k·ªÉ c·∫£ khi component ƒë√£ b·ªã hu·ª∑.
    }, [firebaseUser])
  );

  return (
    <View className="flex-1 justify-center items-center bg-white">
      <ActivityIndicator size="large" color="#ff3d71" />
      <Text className="mt-4 text-lg font-semibold text-gray-700">
        ƒêang x√°c nh·∫≠n thanh to√°n...
      </Text>
      <Text className="text-sm text-gray-500 mt-2 text-center px-6">
        Vui l√≤ng kh√¥ng tho√°t ·ª©ng d·ª•ng trong l√∫c x·ª≠ l√Ω.
      </Text>
    </View>
  );
};

export default WaitingForPayment;
